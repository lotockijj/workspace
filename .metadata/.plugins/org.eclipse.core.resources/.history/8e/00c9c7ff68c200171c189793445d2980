package task2;

import java.util.Random;

/**Minesweeper. Write a program Minesweeper.java that takes 3 command-line arguments M, N, and p 
 * and produces an M-by-N boolean array where each entry is occupied with probability p. 
 * In the minesweeper game, occupied cells represent bombs and empty cells represent safe cells.
 * Print out the array using an asterisk for bombs and a period for safe cells. 
 * Then, replace each safe square with the number of neighboring bombs 
 * (above, below, left, right, or diagonal) and print out the solution..
 * Try to write your code so that you have as few special cases as possible to deal with, 
 * by using an (M+2)-by-(N+2) boolean array.
 * спробуйте реалізувати консольне меню не використовуючи if та case.
*/

public class Minesweeper {
	int[][] arr;
	int m;
	int n;
	float p;
	Random r;
	
	public Minesweeper(int m, int n, float p){
		arr = new int[m][n];
		if( p < 0 || p > 1){
			throw new ArithmeticException();
		}
		this.p = p;
		r = new Random();
	}
	
	public void populateArrayWithBombs(){
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				float chRandom = r.nextFloat();
				arr[i][j] = (p > chRandom) ? 0 : 1;
			}
		}
	}

	public void printArray(){
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j] + "|");
			}
			System.out.println();
		}
	}
	
	public static void main(String[] args) {
		Minesweeper minesweeper = new Minesweeper(7, 6, 0.25f);
		minesweeper.populateArrayWithBombs();
		minesweeper.printArray();
	}
}
