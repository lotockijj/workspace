package parse.faberlic1.join;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import parse.faberlic1.Goods;

public class Join {

	static int i = 1; 
	static int count = 0;
	private static Goods currentGoods;;
	List<Goods> listGoods;
	static String sName;

	String discount;
	int page;
	String article;
	String name;
	BigDecimal priceCatalog;
	BigDecimal theSame;
	String allowance;
	BigDecimal priceStore;
	float ballConsultant;
	BigDecimal priceBuyer;
	float ballBuyer;

	public static void main(String[] args) throws IOException {
		currentGoods = new Goods();
		File file = new File("E:\\Faberlic\\pieces\\join.txt");
		if(!file.exists()){
			try {
				file.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		Path fPath = Paths.get("E:\\Faberlic\\pieces\\1.txt");
		Path fPath2 = Paths.get("E:\\Faberlic\\pieces\\2.txt");
		
		try(Scanner scanner = new Scanner(fPath, "windows-1251"); 
				Scanner scanner2 = new Scanner(fPath2, "windows-1251")){
			while(scanner2.hasNextLine()){
				i++;
				processLine2(scanner2.nextLine());
				if(i == 3){
					processLine(scanner.nextLine());
					i = 0;
				}
				//System.out.println(currentGoods);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static void processLine(String aLine){
		Scanner scanner = new Scanner(aLine);
		scanner.useDelimiter("\\s+");
		if (scanner.hasNext()){
			currentGoods.setPriceCatalog(scanner.nextBigDecimal()); System.out.print(currentGoods.getPriceCatalog() + " ");
			currentGoods.setTheSame(scanner.nextBigDecimal()); System.out.print(currentGoods.getTheSame() + " ");
			currentGoods.setAllowance(scanner.next()); System.out.print(currentGoods.getAllowance() + " "); // val.toString()).setScale(2,RoundingMode.HALF_UP).doubleValue()
			currentGoods.setPriceStore(new BigDecimal(Double.parseDouble(String.valueOf(scanner.next()).replace(",", "."))).setScale(2, RoundingMode.HALF_UP)); System.out.print(currentGoods.getPriceStore() + " ");
			currentGoods.setBallConsultant(scanner.nextFloat()); System.out.print(currentGoods.getBallConsultant() + " ");
			currentGoods.setPriceBuyer(new BigDecimal(Double.parseDouble(String.valueOf(scanner.next()).replace(",", "."))).setScale(2, RoundingMode.HALF_UP)); System.out.print(currentGoods.getPriceBuyer() + " ");
			currentGoods.setBallBuyer(scanner.nextFloat()); System.out.println(currentGoods.getBallBuyer() + " ");
			
			scanner.close();
		}
	}

	private static void processLine2(String aLine) throws UnsupportedEncodingException{
		Scanner scaner = new Scanner(aLine);
		scaner.useDelimiter("\n\r");// 

		while(scaner.hasNext()){

			if(i == 1){
				scaner.useDelimiter("\\s+"); // whitespace;
				currentGoods.setDiscount(scaner.next());
				System.out.println(currentGoods.getDiscount());
				currentGoods.setPage(Integer.parseInt(scaner.nextLine().trim()));
				System.out.println(currentGoods.getPage());
			}
			if(i == 2){
				//System.out.println("*****************************************");
				sName = scaner.nextLine();
				System.out.print(sName + " ");
				String ss = ""; 
				Pattern pattern = Pattern.compile("(\\d\\d\\d\\d)");
				Matcher matcher = pattern.matcher(sName); 
				while(matcher.find()){
					ss = matcher.group();
					System.out.print(ss + " ");
				}
				currentGoods.setArticle(ss);
			}
			if(i == 3) currentGoods.setName(sName + ": " + scaner.next()); //System.out.println("\n" + sName);
		}
		scaner.close();
	}
}

//Scanner scannerTest = new Scanner(fPath2, "windows-1251");
//while(scannerTest.hasNext()){
//	System.out.println(scannerTest.nextLine());
//}
//System.exit(0);

