package designpatterns.fiftinth;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

public class Product extends ProductComponent {
	List<ProductComponent> productContext;
	private BigDecimal price;
	
	public Product(String name, BigDecimal price) {
		super(name);
		this.price = price;
		productContext = new ArrayList<>();
	}
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override
	public void addComponent(ProductComponent product) throws CompositeException{
		productContext.add(product);
	}
	
	public ProductComponent getComponent(int componentNum) throws CompositeException{
		return productContext.get(componentNum);
	}
	
	@Override
	public BigDecimal getPrice() {
		for(ProductComponent product : productContext){
			price = price.add(product.getPrice());
		}
		return price;
	}

	@Override
	public String toString() {
		return "Product [productContext=" + productContext + ", price=" + price + "]";
	}
	
}
